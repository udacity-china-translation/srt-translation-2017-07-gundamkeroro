1
00:00:00,000 --> 00:00:03,009
现在你已经利用你的浏览器开发工具 

2
00:00:03,009 --> 00:00:06,125
接触过 Wikipedia 页面的 HTML 代码

3
00:00:06,125 --> 00:00:10,125
现在 让我们来看看如何使用 Python 来获得这些 HTML 代码

4
00:00:10,125 --> 00:00:12,660
从而在程序中使用这些 HTML 代码

5
00:00:12,660 --> 00:00:14,474
我首先在搜索引擎中搜索

6
00:00:14,474 --> 00:00:19,829
Python request web page from a URL

7
00:00:19,829 --> 00:00:24,899
好的 搜索结果的第一个链接来自 Python3 文档 看起来不错

8
00:00:24,899 --> 00:00:27,109
我来点开它

9
00:00:27,109 --> 00:00:28,710
看看里面写了什么

10
00:00:28,710 --> 00:00:31,080
这里有个很显眼的黄色方框写道

11
00:00:31,079 --> 00:00:36,769
高级 HTTP 用户界面推荐使用 requests 包

12
00:00:36,770 --> 00:00:39,085
"高级" 这个可能就是我们要找的东西

13
00:00:39,085 --> 00:00:43,170
从最简单的开始 让我们在网上获取一个网页

14
00:00:43,170 --> 00:00:46,020
我想用 request 包来试试

15
00:00:46,020 --> 00:00:50,300
request 包的文档看起来挺简单

16
00:00:50,299 --> 00:00:55,649
文档写道 "适合人类食用" 看起来不错

17
00:00:55,649 --> 00:00:58,524
这里有几行简单的样例代码

18
00:00:58,524 --> 00:01:03,109
让我先来试试这段代码  request 不是标准库的一部分 

19
00:01:03,109 --> 00:01:08,784
所以首先我要先使用 pip 安装 输入 "pip3 install requests"

20
00:01:08,784 --> 00:01:10,653
完成 现在 request 已经安装

21
00:01:10,653 --> 00:01:16,560
好的 现在我打开 Python 编译器来试试这段样例代码

22
00:01:16,560 --> 00:01:19,439
我把这段样例代码复制下来

23
00:01:19,439 --> 00:01:23,159
用这段样例代码来获得 Wikipedia 的 dead parrot sketch 页面的 HTML

24
00:01:23,159 --> 00:01:25,674
首先 我要导入 requests 

25
00:01:25,674 --> 00:01:27,606
然后我定义一个变量叫做 response

26
00:01:27,606 --> 00:01:35,730
这样命名比样例代码中的定义的名字 r 更为直观

27
00:01:35,730 --> 00:01:37,469
response 的值是 requests.get()

28
00:01:37,469 --> 00:01:44,694
我把 Wikipedia 的 dead parrot sketch 页面的 URL 写在括号内

29
00:01:44,694 --> 00:01:47,159
样例代码给我们展示了几种

30
00:01:47,159 --> 00:01:49,890
可以从 response 对象中获取信息的方式

31
00:01:49,890 --> 00:01:51,060
但是我真正想要的

32
00:01:51,060 --> 00:01:57,930
是查看网页本身的 HTML 其可以通过 response 的 text 属性获取

33
00:01:57,930 --> 00:02:01,644
让我们把它打印出来看看

34
00:02:01,644 --> 00:02:04,227
完成

35
00:02:04,227 --> 00:02:08,140
哇 页面上可有不少内容

36
00:02:08,139 --> 00:02:11,329
我看到不少看起来是我想要的标签 

37
00:02:11,330 --> 00:02:13,540
这是一个 a href 标签

38
00:02:13,539 --> 00:02:16,384
然后这里是个 div 标签

39
00:02:16,384 --> 00:02:19,424
不过这段 HTML 有点难以阅读

40
00:02:19,425 --> 00:02:23,420
比直接看由 HTML 所展示的页面困难多了

41
00:02:23,419 --> 00:02:27,709
它看起来像是大量的文本 

42
00:02:27,710 --> 00:02:33,930
让我们来看看 response.text 到底是什么类型的数据

43
00:02:33,930 --> 00:02:40,010
好吧 它只是包含该 Wikipedia 页面 HTML 信息的字符串
