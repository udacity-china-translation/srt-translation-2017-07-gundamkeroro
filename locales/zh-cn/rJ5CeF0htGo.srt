1
00:00:00,000 --> 00:00:02,000
现在我们来解答

2
00:00:02,000 --> 00:00:06,000
过程开始时 p 指向的是传入的列表

3
00:00:06,000 --> 00:00:08,000
这个过程应该适用于任何列表

4
00:00:08,000 --> 00:00:10,000
所以我们不应该对传入的列表作出任何假设

5
00:00:10,000 --> 00:00:12,000
这个列表可以是任何长度

6
00:00:12,000 --> 00:00:14,000
i 的值为0

7
00:00:14,000 --> 00:00:19,000
意味着 p[i] 是列表 p 的第1个元素

8
00:00:19,000 --> 00:00:22,000
在循环的主体部分 我们打印出这个元素

9
00:00:22,000 --> 00:00:25,000
之后 i 加上1 循环进行到下一个元素

10
00:00:25,000 --> 00:00:27,000
现在 i 的值为1

11
00:00:27,000 --> 00:00:30,000
即 p 的下一个元素

12
00:00:30,000 --> 00:00:33,000
循环要一直进行下去 直到所有的元素都打印出来

13
00:00:33,000 --> 00:00:35,000
我们需要知道的是

14
00:00:35,000 --> 00:00:37,000
while 循环在何种判断条件下停止

15
00:00:37,000 --> 00:00:40,000
之前我们学过 len 方法

16
00:00:40,000 --> 00:00:44,000
len(p) 返回列表内元素的个数

17
00:00:44,000 --> 00:00:48,000
而本列表最大的索引不是 len 的值

18
00:00:48,000 --> 00:00:50,000
因为列表的元素从0开始计

19
00:00:50,000 --> 00:00:54,000
所以最大的索引应该是 len(p) 减去1的值

20
00:00:54,000 --> 00:00:56,000
我们要确保循环的判断条件中

21
00:00:56,000 --> 00:00:59,000
i 不超过最大的索引值

22
00:00:59,000 --> 00:01:01,000
这个条件可以用很多不同的方法来写

23
00:01:01,000 --> 00:01:06,000
其中一种办法就是 i<=len(p)-1

24
00:01:06,000 --> 00:01:10,000
我们已经知道 i 是整数 因为我们建立 i 初始值为0

25
00:01:10,000 --> 00:01:13,000
之后只不过不断加1而已

26
00:01:13,000 --> 00:01:19,000
所以这个表达式有一个更简单的写法 i<len(p)

27
00:01:19,000 --> 00:01:21,000
这两个表达式都可以作为这个循环的判断条件

28
00:01:21,000 --> 99:59:59,000
短的写法更简单 我们本题使用这种写法